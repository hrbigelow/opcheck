digraph {
	graph [rankdir=LR]
	"Layout(_layout)" [label="Layout(:layout)" color=black]
	IndexRanks [label=IndexRanks color=black]
	IndexRanks -> "RankRange(b)" [color=purple]
	IndexRanks -> "RankRange(l)" [color=purple]
	IndexRanks -> "RankRange(c)" [color=purple]
	DTypesNotImpl [label=DTypesNotImpl color=black]
	DTypesNotImpl -> IndexRanks [color=black]
	DTypesNotImpl -> "Layout(_layout)" [color=black]
	DTypesNotImpl -> "DTypeIndiv(value)" [color=purple]
	DTypesNotImpl -> "DTypeEquiv(bias)" [color=purple]
	SigMap [label=SigMap color=black]
	SigMap -> "Sig(value)" [color=purple]
	SigMap -> "Sig(bias)" [color=purple]
	SigMap -> "Sig(return[0])" [color=purple]
	ArgRanks [label=ArgRanks color=black]
	ArgRanks -> IndexRanks [color=black]
	ArgRanks -> SigMap [color=black]
	ArgIndels [label=ArgIndels color=black]
	ArgIndels -> ArgRanks [color=black]
	ArgMutations [label=ArgMutations color=black]
	ArgMutations -> ArgIndels [color=black]
	ArgMutations -> IndexRanks [color=black]
	ArgMutations -> SigMap [color=black]
	Args [label=Args color=black]
	Args -> "DataFormat(data_format)" [color=purple]
	Args -> "DataTensor(value)" [color=purple]
	Args -> "DataTensor(bias)" [color=purple]
	"RankRange(b)" [label="RankRange(b)" color=black]
	"RankRange(l)" [label="RankRange(l)" color=black]
	"RankRange(l)" -> "RankRange(b)" [color=purple]
	"RankRange(c)" [label="RankRange(c)" color=black]
	"RankRange(c)" -> "RankRange(b)" [color=purple]
	"RankRange(c)" -> "RankRange(l)" [color=purple]
	"DataFormat(data_format)" [label="DataFormat(data_format)" color=red]
	"DataFormat(data_format)" -> IndexRanks [color=black]
	"DataFormat(data_format)" -> "Layout(_layout)" [color=black]
	"DataTensor(value)" [label="DataTensor(value)" color=red]
	"DataTensor(value)" -> ArgMutations [color=black]
	"DataTensor(value)" -> DTypesNotImpl [color=black]
	"Sig(value)" [label="Sig(value)" color=black]
	"Sig(value)" -> "Layout(_layout)" [color=black]
	"DataTensor(bias)" [label="DataTensor(bias)" color=red]
	"DataTensor(bias)" -> ArgMutations [color=black]
	"DataTensor(bias)" -> DTypesNotImpl [color=black]
	"Sig(bias)" [label="Sig(bias)" color=black]
	"Sig(bias)" -> "Layout(_layout)" [color=black]
	"DTypeIndiv(value)" [label="DTypeIndiv(value)" color=black]
	"DTypeEquiv(bias)" [label="DTypeEquiv(bias)" color=black]
	"DTypeEquiv(bias)" -> "DTypeIndiv(value)" [color=black]
	"Sig(return[0])" [label="Sig(return[0])" color=black]
	"Sig(return[0])" -> "Layout(_layout)" [color=black]
}
