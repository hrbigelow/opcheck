digraph {
	graph [rankdir=LR]
	Schema [label=Schema color=black]
	ShapeMap [label=ShapeMap color=black]
	ShapeMap -> "TensorShape(input)" [color=purple]
	ShapeMap -> "ShapeTensor(block_shape)" [color=purple]
	ShapeMap -> "SliceShape(paddings.0)" [color=purple]
	ShapeMap -> "SliceShape(paddings.1)" [color=purple]
	DTypes [label=DTypes color=black]
	DTypes -> "TensorDType(input)" [color=purple]
	ArgMap [label=ArgMap color=black]
	ArgMap -> DataFormat [color=blue]
	Inventory [label=Inventory color=black]
	Inventory -> DTypes [color=black]
	Inventory -> ShapeMap [color=black]
	Inventory -> ArgMap [color=black]
	GetReturnTensors [label=GetReturnTensors color=black]
	GetReturnTensors -> Schema [color=black]
	ValidReturnShapes [label=ValidReturnShapes color=black]
	ValidReturnShapes -> Schema [color=black]
	ValidReturnShapes -> GetReturnTensors [color=black]
	"DataTensor(input)" [label="DataTensor(input)" color=black]
	"DataTensor(input)" -> Schema [color=black]
	"TensorShape(input)" [label="TensorShape(input)" color=black]
	"TensorShape(input)" -> "DataTensor(input)" [color=black]
	"TensorDType(input)" [label="TensorDType(input)" color=black]
	"TensorDType(input)" -> "DataTensor(input)" [color=black]
	"ShapeTensor(block_shape)" [label="ShapeTensor(block_shape)" color=black]
	"ShapeTensor(block_shape)" -> Schema [color=black]
	"ShapeTensor2D(paddings)" [label="ShapeTensor2D(paddings)" color=black]
	"ShapeTensor2D(paddings)" -> Schema [color=black]
	"SliceShape(paddings.0)" [label="SliceShape(paddings.0)" color=black]
	"SliceShape(paddings.0)" -> "ShapeTensor2D(paddings)" [color=black]
	"SliceShape(paddings.1)" [label="SliceShape(paddings.1)" color=black]
	"SliceShape(paddings.1)" -> "ShapeTensor2D(paddings)" [color=black]
	DataFormat [label=DataFormat color=black]
	DataFormat -> Schema [color=black]
}
