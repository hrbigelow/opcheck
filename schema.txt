PredNodes follow a naming format of prefix:kind.  The prefix is either the name
of an actual framework op parameter (e.g. 'input', 'filters', 'padding', etc)
or a name supplied by the schema author.  The kind can be one of the following,
with the semantics given.  PredNodes return a tuple of (status, value), where
the status is either True or False, and the value is either a value to be used
by the children nodes, or a SchemaStatus object signalling why status was
False.

:schema 
  - parents:  none
  - provides the schema object itself.  Always succeeds.  Used by children to
    access named arguments, or static constraints

:tensor 
  - parents: :schema
  - Retrieves the tensor from the prefix argument.  Checks that it is indeed a
    tensor and sets ArgTypeError(prefix) if not

:dtype
  - parents: :tensor
  - Retrieves the dtype field from the tensor.  Always succeeds

:shape
  - parents: :tensor or :schema
  - Retrieves the .shape.as_list() from the parent if it is a tensor.  Or, the
    value of the prefix argument from the :schema.  If non-tensor, must perform
    a validity check provided by the schema author as a predicate function.

:signature
  - parents: any that schema author provides (or none)
  - returns the signature associated with prefix.  prefix may name a tensor
    argument or other shape-related argument

:dtypes
  - parents: input :dtype, :schema
  - It uses the constraints contained in the :schema node to evaluate whether
    the :dtype nodes are consistent.

:input_index_ranks 
  - parents: input :shape and :sig, :schema
  - Uses the static constraints in the :schema node to compute an unambiguous
    setting for the input index rank.  If the possible rank combinations
    doesn't equal one, an error of NoMatchingRanks or AmbiguousRanks is
    returned.

:input_index_dims 
  - parents: :shape, :sig, :input_index_ranks
  - Infers the index dims that would be consistent with the :shape and :sig
    nodes and returns those index dims if successful.  If not, returns an
    IndexUsageError(idx) with the inconsistent usage.

:pseudo 
  - parents: :schema
  - a pseudo-argument which accepts only :schema and produces some value
    derived from the real arguments in the :schema.  This type of node is
    needed sometimes to break cycles in the graphs

:comp_index_ranks
  - parents: :input_index_ranks, :schema
  - computes any index ranks for indices that don't appear in any input
    signature, based on constraints in the schema

:comp_index_dims
  - parents: :input_index_dims, :comp_index_ranks, and any inputs that the
    schema author specifies
  - the provided function computes the dims for the given index

:predicted_shape
  - parents: :input_index_dims, :comp_index_dims, :sig
  - predicts the shape of the signature given the index dimensions

:constraint
  - parents: any provided by schema author
  - executes a schema-author-provided predicate function on the inputs, and
    returns either Success() or some other SchemaStatus object.  Does not
    return any value or have any children.

